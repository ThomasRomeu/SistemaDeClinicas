// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaDeClinicas.Entidades;

#nullable disable

namespace SistemaDeClinicas.Migrations
{
    [DbContext(typeof(ClinicaDbContext))]
    [Migration("20230421001542_CreoEntidadConsulta")]
    partial class CreoEntidadConsulta
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SistemaDeClinicas.Entidades.Consulta", b =>
                {
                    b.Property<int>("IdConsulta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdConsulta"), 1L, 1);

                    b.Property<bool>("ConsolturioOPractica")
                        .HasColumnType("bit");

                    b.Property<int>("Costo")
                        .HasColumnType("int");

                    b.Property<int>("CostoMaterialDescartable")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.HasKey("IdConsulta");

                    b.HasIndex("MedicoId");

                    b.HasIndex("PacienteId");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("SistemaDeClinicas.Entidades.Medico", b =>
                {
                    b.Property<int>("idMedico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idMedico"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Matricula")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NroDoc")
                        .HasColumnType("int");

                    b.HasKey("idMedico");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("SistemaDeClinicas.Entidades.Paciente", b =>
                {
                    b.Property<int>("idPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPaciente"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NroDoc")
                        .HasColumnType("int");

                    b.Property<int>("NroHistoriaClinica")
                        .HasColumnType("int");

                    b.HasKey("idPaciente");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("SistemaDeClinicas.Entidades.Consulta", b =>
                {
                    b.HasOne("SistemaDeClinicas.Entidades.Medico", "Medico")
                        .WithMany("ConsultasMedico")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeClinicas.Entidades.Paciente", "Paciente")
                        .WithMany("ConsultasRealizadas")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("SistemaDeClinicas.Entidades.Medico", b =>
                {
                    b.Navigation("ConsultasMedico");
                });

            modelBuilder.Entity("SistemaDeClinicas.Entidades.Paciente", b =>
                {
                    b.Navigation("ConsultasRealizadas");
                });
#pragma warning restore 612, 618
        }
    }
}
